-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matmul_hw is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_EN_A : OUT STD_LOGIC;
    a_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_0_Clk_A : OUT STD_LOGIC;
    a_0_Rst_A : OUT STD_LOGIC;
    a_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_EN_A : OUT STD_LOGIC;
    a_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_1_Clk_A : OUT STD_LOGIC;
    a_1_Rst_A : OUT STD_LOGIC;
    a_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_EN_A : OUT STD_LOGIC;
    a_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_2_Clk_A : OUT STD_LOGIC;
    a_2_Rst_A : OUT STD_LOGIC;
    a_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_3_EN_A : OUT STD_LOGIC;
    a_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    a_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    a_3_Clk_A : OUT STD_LOGIC;
    a_3_Rst_A : OUT STD_LOGIC;
    b_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_EN_A : OUT STD_LOGIC;
    b_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_0_Clk_A : OUT STD_LOGIC;
    b_0_Rst_A : OUT STD_LOGIC;
    b_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_EN_A : OUT STD_LOGIC;
    b_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_1_Clk_A : OUT STD_LOGIC;
    b_1_Rst_A : OUT STD_LOGIC;
    b_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_2_EN_A : OUT STD_LOGIC;
    b_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_2_Clk_A : OUT STD_LOGIC;
    b_2_Rst_A : OUT STD_LOGIC;
    b_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_3_EN_A : OUT STD_LOGIC;
    b_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    b_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    b_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    b_3_Clk_A : OUT STD_LOGIC;
    b_3_Rst_A : OUT STD_LOGIC;
    c_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_EN_A : OUT STD_LOGIC;
    c_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    c_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    c_Clk_A : OUT STD_LOGIC;
    c_Rst_A : OUT STD_LOGIC );
end;


architecture behav of matmul_hw is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matmul_hw,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.150000,HLS_SYN_LAT=8202,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=16,HLS_SYN_FF=2971,HLS_SYN_LUT=1769}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv55_0 : STD_LOGIC_VECTOR (54 downto 0) := "0000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv58_1 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv8_60 : STD_LOGIC_VECTOR (7 downto 0) := "01100000";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv58_2 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv9_5 : STD_LOGIC_VECTOR (8 downto 0) := "000000101";
    constant ap_const_lv8_A0 : STD_LOGIC_VECTOR (7 downto 0) := "10100000";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv58_3 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv9_E0 : STD_LOGIC_VECTOR (8 downto 0) := "011100000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_676 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_687 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_reg_698 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_710_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_870 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_flatten_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal grp_fu_712_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_874 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_709_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_878 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_711_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_882 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_886 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal reg_890 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_894 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_898 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_902 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal reg_906 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal exitcond_flatten_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_952_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten_next_reg_1359 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_mid2_fu_970_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_mid2_reg_1364 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_fu_978_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_mid2_v_reg_1376 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_986_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_reg_1382 : STD_LOGIC_VECTOR (8 downto 0);
    signal a_0_load_reg_1473 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_reg_1478 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_reg_1483 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_reg_1488 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_load_reg_1493 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_load_reg_1498 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_load_reg_1503 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_load_reg_1508 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_1_reg_1553 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_1_reg_1558 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_1_reg_1563 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_1_reg_1568 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_load_1_reg_1573 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_load_1_reg_1578 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_load_1_reg_1583 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_load_1_reg_1588 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_cast3_fu_1089_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast3_reg_1613 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_0_load_2_reg_1638 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_2_reg_1643 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_2_reg_1648 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_2_reg_1653 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_load_2_reg_1658 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_load_2_reg_1663 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_load_2_reg_1668 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_load_2_reg_1673 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_3_reg_1718 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_3_reg_1723 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_3_reg_1728 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_3_reg_1733 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_load_3_reg_1738 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_load_3_reg_1743 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_load_3_reg_1748 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_load_3_reg_1753 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_4_reg_1798 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_4_reg_1803 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_4_reg_1808 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_4_reg_1813 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_load_4_reg_1818 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_load_4_reg_1823 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_load_4_reg_1828 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_load_4_reg_1833 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_5_reg_1878 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_5_reg_1883 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_5_reg_1888 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_5_reg_1893 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_load_5_reg_1898 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_load_5_reg_1903 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_load_5_reg_1908 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_load_5_reg_1913 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_0_load_6_reg_1958 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_6_reg_1963 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_6_reg_1968 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_6_reg_1973 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_load_6_reg_1978 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_load_6_reg_1983 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_load_6_reg_1988 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_load_6_reg_1993 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_1226_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_1_reg_1998 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_0_load_7_reg_2003 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_load_7_reg_2008 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_load_7_reg_2013 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_load_7_reg_2018 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_load_7_reg_2023 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_load_7_reg_2028 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_load_7_reg_2033 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_load_7_reg_2038 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_910_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_reg_2043 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_916_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_reg_2048 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_922_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp26_reg_2053 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_reg_2058 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_reg_2063 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_940_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp18_reg_2068 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp27_reg_2073 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_6_reg_2078 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_13_reg_2083 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_29_reg_2088 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_7_reg_2093 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_14_reg_2098 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_30_reg_2103 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1251_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_2108 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_1277_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_reg_2113 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_fu_1314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_reg_2118 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal indvar_flatten_phi_fu_680_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_phi_fu_691_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_phi_fu_702_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_994_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_1002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1015_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_cast_fu_1036_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_1049_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_1061_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_1077_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_cast_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1111_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_1123_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_1139_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_25_cast_fu_1156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1169_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_1181_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_1197_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_cast_fu_1218_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_cast_fu_1340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal a_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal a_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal c_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_709_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_709_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_710_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_710_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_711_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_712_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_712_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_934_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_928_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_958_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_fu_1010_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_cast_fu_1027_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_19_fu_1030_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_7_fu_1044_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_9_fu_1072_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_21_fu_1092_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_1106_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_fu_1134_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_fu_1151_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1164_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_fu_1192_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_cast4_fu_1209_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_25_fu_1212_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp8_fu_1241_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_1235_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_1231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp15_fu_1267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_1261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_1271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1257_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp30_fu_1298_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp29_fu_1292_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp28_fu_1302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp25_fu_1288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp24_fu_1308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_fu_1283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1320_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_cast5_fu_1331_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_20_cast_fu_1327_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_fu_1334_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp1_fu_1345_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);

    component matmul_hw_mul_32sdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    matmul_hw_mul_32sdEe_U1 : component matmul_hw_mul_32sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_709_p0,
        din1 => grp_fu_709_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_709_p2);

    matmul_hw_mul_32sdEe_U2 : component matmul_hw_mul_32sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_710_p0,
        din1 => grp_fu_710_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_710_p2);

    matmul_hw_mul_32sdEe_U3 : component matmul_hw_mul_32sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_711_p0,
        din1 => grp_fu_711_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_711_p2);

    matmul_hw_mul_32sdEe_U4 : component matmul_hw_mul_32sdEe
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_712_p0,
        din1 => grp_fu_712_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_712_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond_flatten_fu_946_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (exitcond_flatten_reg_1355 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and not((exitcond_flatten_reg_1355 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_687_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_687 <= tmp_mid2_v_reg_1376;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_687 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_676_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_676 <= indvar_flatten_next_reg_1359;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                indvar_flatten_reg_676 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_reg_698_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_698 <= j_1_reg_1998;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                j_reg_698 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                a_0_load_1_reg_1553 <= a_0_Dout_A;
                a_1_load_1_reg_1563 <= a_1_Dout_A;
                a_2_load_1_reg_1573 <= a_2_Dout_A;
                a_3_load_1_reg_1583 <= a_3_Dout_A;
                b_0_load_1_reg_1558 <= b_0_Dout_A;
                b_1_load_1_reg_1568 <= b_1_Dout_A;
                b_2_load_1_reg_1578 <= b_2_Dout_A;
                b_3_load_1_reg_1588 <= b_3_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                a_0_load_2_reg_1638 <= a_0_Dout_A;
                a_1_load_2_reg_1648 <= a_1_Dout_A;
                a_2_load_2_reg_1658 <= a_2_Dout_A;
                a_3_load_2_reg_1668 <= a_3_Dout_A;
                b_0_load_2_reg_1643 <= b_0_Dout_A;
                b_1_load_2_reg_1653 <= b_1_Dout_A;
                b_2_load_2_reg_1663 <= b_2_Dout_A;
                b_3_load_2_reg_1673 <= b_3_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                a_0_load_3_reg_1718 <= a_0_Dout_A;
                a_1_load_3_reg_1728 <= a_1_Dout_A;
                a_2_load_3_reg_1738 <= a_2_Dout_A;
                a_3_load_3_reg_1748 <= a_3_Dout_A;
                b_0_load_3_reg_1723 <= b_0_Dout_A;
                b_1_load_3_reg_1733 <= b_1_Dout_A;
                b_2_load_3_reg_1743 <= b_2_Dout_A;
                b_3_load_3_reg_1753 <= b_3_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                a_0_load_4_reg_1798 <= a_0_Dout_A;
                a_1_load_4_reg_1808 <= a_1_Dout_A;
                a_2_load_4_reg_1818 <= a_2_Dout_A;
                a_3_load_4_reg_1828 <= a_3_Dout_A;
                b_0_load_4_reg_1803 <= b_0_Dout_A;
                b_1_load_4_reg_1813 <= b_1_Dout_A;
                b_2_load_4_reg_1823 <= b_2_Dout_A;
                b_3_load_4_reg_1833 <= b_3_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                a_0_load_5_reg_1878 <= a_0_Dout_A;
                a_1_load_5_reg_1888 <= a_1_Dout_A;
                a_2_load_5_reg_1898 <= a_2_Dout_A;
                a_3_load_5_reg_1908 <= a_3_Dout_A;
                b_0_load_5_reg_1883 <= b_0_Dout_A;
                b_1_load_5_reg_1893 <= b_1_Dout_A;
                b_2_load_5_reg_1903 <= b_2_Dout_A;
                b_3_load_5_reg_1913 <= b_3_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1355 = ap_const_lv1_0))) then
                a_0_load_6_reg_1958 <= a_0_Dout_A;
                a_1_load_6_reg_1968 <= a_1_Dout_A;
                a_2_load_6_reg_1978 <= a_2_Dout_A;
                a_3_load_6_reg_1988 <= a_3_Dout_A;
                b_0_load_6_reg_1963 <= b_0_Dout_A;
                b_1_load_6_reg_1973 <= b_1_Dout_A;
                b_2_load_6_reg_1983 <= b_2_Dout_A;
                b_3_load_6_reg_1993 <= b_3_Dout_A;
                j_1_reg_1998 <= j_1_fu_1226_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                a_0_load_7_reg_2003 <= a_0_Dout_A;
                a_1_load_7_reg_2013 <= a_1_Dout_A;
                a_2_load_7_reg_2023 <= a_2_Dout_A;
                a_3_load_7_reg_2033 <= a_3_Dout_A;
                b_0_load_7_reg_2008 <= b_0_Dout_A;
                b_1_load_7_reg_2018 <= b_1_Dout_A;
                b_2_load_7_reg_2028 <= b_2_Dout_A;
                b_3_load_7_reg_2038 <= b_3_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1))) then
                a_0_load_reg_1473 <= a_0_Dout_A;
                a_1_load_reg_1483 <= a_1_Dout_A;
                a_2_load_reg_1493 <= a_2_Dout_A;
                a_3_load_reg_1503 <= a_3_Dout_A;
                b_0_load_reg_1478 <= b_0_Dout_A;
                b_1_load_reg_1488 <= b_1_Dout_A;
                b_2_load_reg_1498 <= b_2_Dout_A;
                b_3_load_reg_1508 <= b_3_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355 <= exitcond_flatten_reg_1355;
                ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364 <= j_mid2_reg_1364;
                ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376 <= tmp_mid2_v_reg_1376;
                exitcond_flatten_reg_1355 <= exitcond_flatten_fu_946_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_flatten_next_reg_1359 <= indvar_flatten_next_fu_952_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_946_p2))) then
                j_mid2_reg_1364 <= j_mid2_fu_970_p3;
                    tmp_reg_1382(8 downto 3) <= tmp_fu_986_p3(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1355 = ap_const_lv1_0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_870 <= grp_fu_710_p2;
                reg_874 <= grp_fu_712_p2;
                reg_882 <= grp_fu_711_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond_flatten_reg_1355 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_878 <= grp_fu_709_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_886 <= grp_fu_710_p2;
                reg_890 <= grp_fu_712_p2;
                reg_898 <= grp_fu_711_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_894 <= grp_fu_709_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_902 <= grp_fu_709_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_906 <= grp_fu_709_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355))) then
                tmp11_reg_2048 <= grp_fu_916_p2;
                tmp26_reg_2053 <= grp_fu_922_p2;
                tmp4_reg_2043 <= grp_fu_910_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                tmp12_reg_2063 <= grp_fu_916_p2;
                tmp18_reg_2068 <= grp_fu_940_p2;
                tmp27_reg_2073 <= grp_fu_922_p2;
                tmp5_reg_2058 <= grp_fu_910_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355))) then
                tmp16_reg_2118 <= tmp16_fu_1314_p2;
                tmp2_reg_2108 <= tmp2_fu_1251_p2;
                tmp9_reg_2113 <= tmp9_fu_1277_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                    tmp_2_cast3_reg_1613(5 downto 0) <= tmp_2_cast3_fu_1089_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_6_13_reg_2083 <= grp_fu_712_p2;
                tmp_6_29_reg_2088 <= grp_fu_711_p2;
                tmp_6_6_reg_2078 <= grp_fu_710_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_6_14_reg_2098 <= grp_fu_712_p2;
                tmp_6_30_reg_2103 <= grp_fu_711_p2;
                tmp_6_7_reg_2093 <= grp_fu_710_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_0 = exitcond_flatten_fu_946_p2))) then
                tmp_mid2_v_reg_1376 <= tmp_mid2_v_fu_978_p3;
            end if;
        end if;
    end process;
    tmp_reg_1382(2 downto 0) <= "000";
    tmp_2_cast3_reg_1613(7 downto 6) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, exitcond_flatten_fu_946_p2, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_946_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond_flatten_fu_946_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    a_0_Addr_A <= std_logic_vector(shift_left(unsigned(a_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_3_fu_994_p1, tmp_5_fu_1015_p3, tmp_8_fu_1049_p3, tmp_s_fu_1077_p3, tmp_11_fu_1111_p3, tmp_13_fu_1139_p3, tmp_15_fu_1169_p3, tmp_17_fu_1197_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_0_Addr_A_orig <= tmp_17_fu_1197_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_0_Addr_A_orig <= tmp_15_fu_1169_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_0_Addr_A_orig <= tmp_13_fu_1139_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_0_Addr_A_orig <= tmp_11_fu_1111_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_0_Addr_A_orig <= tmp_s_fu_1077_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_0_Addr_A_orig <= tmp_8_fu_1049_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_0_Addr_A_orig <= tmp_5_fu_1015_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_0_Addr_A_orig <= tmp_3_fu_994_p1(32 - 1 downto 0);
            else 
                a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_0_Clk_A <= ap_clk;
    a_0_Din_A <= ap_const_lv32_0;

    a_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            a_0_EN_A <= ap_const_logic_1;
        else 
            a_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_0_Rst_A <= ap_rst;
    a_0_WEN_A <= ap_const_lv4_0;
    a_1_Addr_A <= std_logic_vector(shift_left(unsigned(a_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_3_fu_994_p1, tmp_5_fu_1015_p3, tmp_8_fu_1049_p3, tmp_s_fu_1077_p3, tmp_11_fu_1111_p3, tmp_13_fu_1139_p3, tmp_15_fu_1169_p3, tmp_17_fu_1197_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_1_Addr_A_orig <= tmp_17_fu_1197_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_1_Addr_A_orig <= tmp_15_fu_1169_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_1_Addr_A_orig <= tmp_13_fu_1139_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_1_Addr_A_orig <= tmp_11_fu_1111_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_1_Addr_A_orig <= tmp_s_fu_1077_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_1_Addr_A_orig <= tmp_8_fu_1049_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_1_Addr_A_orig <= tmp_5_fu_1015_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_1_Addr_A_orig <= tmp_3_fu_994_p1(32 - 1 downto 0);
            else 
                a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_1_Clk_A <= ap_clk;
    a_1_Din_A <= ap_const_lv32_0;

    a_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            a_1_EN_A <= ap_const_logic_1;
        else 
            a_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_1_Rst_A <= ap_rst;
    a_1_WEN_A <= ap_const_lv4_0;
    a_2_Addr_A <= std_logic_vector(shift_left(unsigned(a_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_2_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_3_fu_994_p1, tmp_5_fu_1015_p3, tmp_8_fu_1049_p3, tmp_s_fu_1077_p3, tmp_11_fu_1111_p3, tmp_13_fu_1139_p3, tmp_15_fu_1169_p3, tmp_17_fu_1197_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_2_Addr_A_orig <= tmp_17_fu_1197_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_2_Addr_A_orig <= tmp_15_fu_1169_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_2_Addr_A_orig <= tmp_13_fu_1139_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_2_Addr_A_orig <= tmp_11_fu_1111_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_2_Addr_A_orig <= tmp_s_fu_1077_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_2_Addr_A_orig <= tmp_8_fu_1049_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_2_Addr_A_orig <= tmp_5_fu_1015_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_2_Addr_A_orig <= tmp_3_fu_994_p1(32 - 1 downto 0);
            else 
                a_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_2_Clk_A <= ap_clk;
    a_2_Din_A <= ap_const_lv32_0;

    a_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            a_2_EN_A <= ap_const_logic_1;
        else 
            a_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_2_Rst_A <= ap_rst;
    a_2_WEN_A <= ap_const_lv4_0;
    a_3_Addr_A <= std_logic_vector(shift_left(unsigned(a_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    a_3_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_3_fu_994_p1, tmp_5_fu_1015_p3, tmp_8_fu_1049_p3, tmp_s_fu_1077_p3, tmp_11_fu_1111_p3, tmp_13_fu_1139_p3, tmp_15_fu_1169_p3, tmp_17_fu_1197_p3)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                a_3_Addr_A_orig <= tmp_17_fu_1197_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                a_3_Addr_A_orig <= tmp_15_fu_1169_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                a_3_Addr_A_orig <= tmp_13_fu_1139_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                a_3_Addr_A_orig <= tmp_11_fu_1111_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                a_3_Addr_A_orig <= tmp_s_fu_1077_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                a_3_Addr_A_orig <= tmp_8_fu_1049_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                a_3_Addr_A_orig <= tmp_5_fu_1015_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                a_3_Addr_A_orig <= tmp_3_fu_994_p1(32 - 1 downto 0);
            else 
                a_3_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            a_3_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    a_3_Clk_A <= ap_clk;
    a_3_Din_A <= ap_const_lv32_0;

    a_3_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            a_3_EN_A <= ap_const_logic_1;
        else 
            a_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    a_3_Rst_A <= ap_rst;
    a_3_WEN_A <= ap_const_lv4_0;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state19 <= ap_CS_fsm(9 downto 9);

    ap_done_assign_proc : process(ap_CS_fsm_state19)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state19))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Addr_A <= std_logic_vector(shift_left(unsigned(b_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_2_fu_1002_p1, tmp_21_cast_fu_1036_p1, tmp_20_fu_1061_p3, tmp_23_cast_fu_1098_p1, tmp_22_fu_1123_p3, tmp_25_cast_fu_1156_p1, tmp_24_fu_1181_p3, tmp_27_cast_fu_1218_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_0_Addr_A_orig <= tmp_27_cast_fu_1218_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_0_Addr_A_orig <= tmp_24_fu_1181_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_0_Addr_A_orig <= tmp_25_cast_fu_1156_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_0_Addr_A_orig <= tmp_22_fu_1123_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_0_Addr_A_orig <= tmp_23_cast_fu_1098_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_0_Addr_A_orig <= tmp_20_fu_1061_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_0_Addr_A_orig <= tmp_21_cast_fu_1036_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_0_Addr_A_orig <= tmp_2_fu_1002_p1(32 - 1 downto 0);
            else 
                b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_0_Clk_A <= ap_clk;
    b_0_Din_A <= ap_const_lv32_0;

    b_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            b_0_EN_A <= ap_const_logic_1;
        else 
            b_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_0_Rst_A <= ap_rst;
    b_0_WEN_A <= ap_const_lv4_0;
    b_1_Addr_A <= std_logic_vector(shift_left(unsigned(b_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_2_fu_1002_p1, tmp_21_cast_fu_1036_p1, tmp_20_fu_1061_p3, tmp_23_cast_fu_1098_p1, tmp_22_fu_1123_p3, tmp_25_cast_fu_1156_p1, tmp_24_fu_1181_p3, tmp_27_cast_fu_1218_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_1_Addr_A_orig <= tmp_27_cast_fu_1218_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_1_Addr_A_orig <= tmp_24_fu_1181_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_1_Addr_A_orig <= tmp_25_cast_fu_1156_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_1_Addr_A_orig <= tmp_22_fu_1123_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_1_Addr_A_orig <= tmp_23_cast_fu_1098_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_1_Addr_A_orig <= tmp_20_fu_1061_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_1_Addr_A_orig <= tmp_21_cast_fu_1036_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_1_Addr_A_orig <= tmp_2_fu_1002_p1(32 - 1 downto 0);
            else 
                b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_1_Clk_A <= ap_clk;
    b_1_Din_A <= ap_const_lv32_0;

    b_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            b_1_EN_A <= ap_const_logic_1;
        else 
            b_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_1_Rst_A <= ap_rst;
    b_1_WEN_A <= ap_const_lv4_0;
    b_2_Addr_A <= std_logic_vector(shift_left(unsigned(b_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_2_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_2_fu_1002_p1, tmp_21_cast_fu_1036_p1, tmp_20_fu_1061_p3, tmp_23_cast_fu_1098_p1, tmp_22_fu_1123_p3, tmp_25_cast_fu_1156_p1, tmp_24_fu_1181_p3, tmp_27_cast_fu_1218_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_2_Addr_A_orig <= tmp_27_cast_fu_1218_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_2_Addr_A_orig <= tmp_24_fu_1181_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_2_Addr_A_orig <= tmp_25_cast_fu_1156_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_2_Addr_A_orig <= tmp_22_fu_1123_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_2_Addr_A_orig <= tmp_23_cast_fu_1098_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_2_Addr_A_orig <= tmp_20_fu_1061_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_2_Addr_A_orig <= tmp_21_cast_fu_1036_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_2_Addr_A_orig <= tmp_2_fu_1002_p1(32 - 1 downto 0);
            else 
                b_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_2_Clk_A <= ap_clk;
    b_2_Din_A <= ap_const_lv32_0;

    b_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            b_2_EN_A <= ap_const_logic_1;
        else 
            b_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_2_Rst_A <= ap_rst;
    b_2_WEN_A <= ap_const_lv4_0;
    b_3_Addr_A <= std_logic_vector(shift_left(unsigned(b_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    b_3_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, tmp_2_fu_1002_p1, tmp_21_cast_fu_1036_p1, tmp_20_fu_1061_p3, tmp_23_cast_fu_1098_p1, tmp_22_fu_1123_p3, tmp_25_cast_fu_1156_p1, tmp_24_fu_1181_p3, tmp_27_cast_fu_1218_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                b_3_Addr_A_orig <= tmp_27_cast_fu_1218_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                b_3_Addr_A_orig <= tmp_24_fu_1181_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                b_3_Addr_A_orig <= tmp_25_cast_fu_1156_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                b_3_Addr_A_orig <= tmp_22_fu_1123_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                b_3_Addr_A_orig <= tmp_23_cast_fu_1098_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                b_3_Addr_A_orig <= tmp_20_fu_1061_p3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                b_3_Addr_A_orig <= tmp_21_cast_fu_1036_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                b_3_Addr_A_orig <= tmp_2_fu_1002_p1(32 - 1 downto 0);
            else 
                b_3_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            b_3_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    b_3_Clk_A <= ap_clk;
    b_3_Din_A <= ap_const_lv32_0;

    b_3_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            b_3_EN_A <= ap_const_logic_1;
        else 
            b_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    b_3_Rst_A <= ap_rst;
    b_3_WEN_A <= ap_const_lv4_0;
    c_Addr_A <= std_logic_vector(shift_left(unsigned(c_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    c_Addr_A_orig <= tmp_28_cast_fu_1340_p1(32 - 1 downto 0);
    c_Clk_A <= ap_clk;
    c_Din_A <= std_logic_vector(unsigned(tmp16_reg_2118) + unsigned(tmp1_fu_1345_p2));

    c_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            c_EN_A <= ap_const_logic_1;
        else 
            c_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    c_Rst_A <= ap_rst;

    c_WEN_A_assign_proc : process(ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond_flatten_reg_1355) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            c_WEN_A <= ap_const_lv4_F;
        else 
            c_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    exitcond_flatten_fu_946_p2 <= "1" when (indvar_flatten_phi_fu_680_p4 = ap_const_lv11_400) else "0";
    exitcond_fu_964_p2 <= "1" when (j_phi_fu_702_p4 = ap_const_lv6_20) else "0";

    grp_fu_709_p0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, a_2_load_reg_1493, a_2_load_1_reg_1573, a_2_load_2_reg_1658, a_2_load_3_reg_1738, a_2_load_4_reg_1818, a_2_load_5_reg_1898, a_2_load_6_reg_1978, a_2_load_7_reg_2023)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_709_p0 <= a_2_load_7_reg_2023;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_709_p0 <= a_2_load_6_reg_1978;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_709_p0 <= a_2_load_5_reg_1898;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_709_p0 <= a_2_load_4_reg_1818;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_709_p0 <= a_2_load_3_reg_1738;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_709_p0 <= a_2_load_2_reg_1658;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_709_p0 <= a_2_load_1_reg_1573;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_709_p0 <= a_2_load_reg_1493;
        else 
            grp_fu_709_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_709_p1_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, b_2_load_reg_1498, b_2_load_1_reg_1578, b_2_load_2_reg_1663, b_2_load_3_reg_1743, b_2_load_4_reg_1823, b_2_load_5_reg_1903, b_2_load_6_reg_1983, b_2_load_7_reg_2028)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_709_p1 <= b_2_load_7_reg_2028;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_709_p1 <= b_2_load_6_reg_1983;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_709_p1 <= b_2_load_5_reg_1903;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_709_p1 <= b_2_load_4_reg_1823;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_709_p1 <= b_2_load_3_reg_1743;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_709_p1 <= b_2_load_2_reg_1663;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_709_p1 <= b_2_load_1_reg_1578;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_709_p1 <= b_2_load_reg_1498;
        else 
            grp_fu_709_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_710_p0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, a_0_load_reg_1473, a_0_load_1_reg_1553, a_0_load_2_reg_1638, a_0_load_3_reg_1718, a_0_load_4_reg_1798, a_0_load_5_reg_1878, a_0_load_6_reg_1958, a_0_load_7_reg_2003)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_710_p0 <= a_0_load_7_reg_2003;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_710_p0 <= a_0_load_6_reg_1958;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_710_p0 <= a_0_load_5_reg_1878;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_710_p0 <= a_0_load_4_reg_1798;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_710_p0 <= a_0_load_3_reg_1718;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_710_p0 <= a_0_load_2_reg_1638;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_710_p0 <= a_0_load_1_reg_1553;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_710_p0 <= a_0_load_reg_1473;
        else 
            grp_fu_710_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_710_p1_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, b_0_load_reg_1478, b_0_load_1_reg_1558, b_0_load_2_reg_1643, b_0_load_3_reg_1723, b_0_load_4_reg_1803, b_0_load_5_reg_1883, b_0_load_6_reg_1963, b_0_load_7_reg_2008)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_710_p1 <= b_0_load_7_reg_2008;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_710_p1 <= b_0_load_6_reg_1963;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_710_p1 <= b_0_load_5_reg_1883;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_710_p1 <= b_0_load_4_reg_1803;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_710_p1 <= b_0_load_3_reg_1723;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_710_p1 <= b_0_load_2_reg_1643;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_710_p1 <= b_0_load_1_reg_1558;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_710_p1 <= b_0_load_reg_1478;
        else 
            grp_fu_710_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_711_p0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, a_3_load_reg_1503, a_3_load_1_reg_1583, a_3_load_2_reg_1668, a_3_load_3_reg_1748, a_3_load_4_reg_1828, a_3_load_5_reg_1908, a_3_load_6_reg_1988, a_3_load_7_reg_2033)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_711_p0 <= a_3_load_7_reg_2033;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_711_p0 <= a_3_load_6_reg_1988;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_711_p0 <= a_3_load_5_reg_1908;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_711_p0 <= a_3_load_4_reg_1828;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_711_p0 <= a_3_load_3_reg_1748;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_711_p0 <= a_3_load_2_reg_1668;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_711_p0 <= a_3_load_1_reg_1583;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_711_p0 <= a_3_load_reg_1503;
        else 
            grp_fu_711_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_711_p1_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, b_3_load_reg_1508, b_3_load_1_reg_1588, b_3_load_2_reg_1673, b_3_load_3_reg_1753, b_3_load_4_reg_1833, b_3_load_5_reg_1913, b_3_load_6_reg_1993, b_3_load_7_reg_2038)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_711_p1 <= b_3_load_7_reg_2038;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_711_p1 <= b_3_load_6_reg_1993;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_711_p1 <= b_3_load_5_reg_1913;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_711_p1 <= b_3_load_4_reg_1833;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_711_p1 <= b_3_load_3_reg_1753;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_711_p1 <= b_3_load_2_reg_1673;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_711_p1 <= b_3_load_1_reg_1588;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_711_p1 <= b_3_load_reg_1508;
        else 
            grp_fu_711_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_712_p0_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, a_1_load_reg_1483, a_1_load_1_reg_1563, a_1_load_2_reg_1648, a_1_load_3_reg_1728, a_1_load_4_reg_1808, a_1_load_5_reg_1888, a_1_load_6_reg_1968, a_1_load_7_reg_2013)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_712_p0 <= a_1_load_7_reg_2013;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_712_p0 <= a_1_load_6_reg_1968;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_712_p0 <= a_1_load_5_reg_1888;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_712_p0 <= a_1_load_4_reg_1808;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_712_p0 <= a_1_load_3_reg_1728;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_712_p0 <= a_1_load_2_reg_1648;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_712_p0 <= a_1_load_1_reg_1563;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_712_p0 <= a_1_load_reg_1483;
        else 
            grp_fu_712_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_712_p1_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, b_1_load_reg_1488, b_1_load_1_reg_1568, b_1_load_2_reg_1653, b_1_load_3_reg_1733, b_1_load_4_reg_1813, b_1_load_5_reg_1893, b_1_load_6_reg_1973, b_1_load_7_reg_2018)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_712_p1 <= b_1_load_7_reg_2018;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_712_p1 <= b_1_load_6_reg_1973;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            grp_fu_712_p1 <= b_1_load_5_reg_1893;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_712_p1 <= b_1_load_4_reg_1813;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_712_p1 <= b_1_load_3_reg_1733;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_712_p1 <= b_1_load_2_reg_1653;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_712_p1 <= b_1_load_1_reg_1568;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_712_p1 <= b_1_load_reg_1488;
        else 
            grp_fu_712_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_910_p2 <= std_logic_vector(unsigned(reg_870) + unsigned(reg_886));
    grp_fu_916_p2 <= std_logic_vector(unsigned(reg_874) + unsigned(reg_890));
    grp_fu_922_p2 <= std_logic_vector(unsigned(reg_882) + unsigned(reg_898));
    grp_fu_928_p2 <= std_logic_vector(unsigned(reg_878) + unsigned(reg_894));
    grp_fu_934_p2 <= std_logic_vector(unsigned(reg_902) + unsigned(reg_906));
    grp_fu_940_p2 <= std_logic_vector(unsigned(grp_fu_934_p2) + unsigned(grp_fu_928_p2));
    i_1_fu_958_p2 <= std_logic_vector(unsigned(i_phi_fu_691_p4) + unsigned(ap_const_lv6_1));

    i_phi_fu_691_p4_assign_proc : process(i_reg_687, exitcond_flatten_reg_1355, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, tmp_mid2_v_reg_1376)
    begin
        if (((exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            i_phi_fu_691_p4 <= tmp_mid2_v_reg_1376;
        else 
            i_phi_fu_691_p4 <= i_reg_687;
        end if; 
    end process;

    indvar_flatten_next_fu_952_p2 <= std_logic_vector(unsigned(indvar_flatten_phi_fu_680_p4) + unsigned(ap_const_lv11_1));

    indvar_flatten_phi_fu_680_p4_assign_proc : process(indvar_flatten_reg_676, exitcond_flatten_reg_1355, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, indvar_flatten_next_reg_1359)
    begin
        if (((exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            indvar_flatten_phi_fu_680_p4 <= indvar_flatten_next_reg_1359;
        else 
            indvar_flatten_phi_fu_680_p4 <= indvar_flatten_reg_676;
        end if; 
    end process;

    j_1_fu_1226_p2 <= std_logic_vector(unsigned(j_mid2_reg_1364) + unsigned(ap_const_lv6_1));
    j_mid2_fu_970_p3 <= 
        ap_const_lv6_0 when (exitcond_fu_964_p2(0) = '1') else 
        j_phi_fu_702_p4;

    j_phi_fu_702_p4_assign_proc : process(j_reg_698, exitcond_flatten_reg_1355, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, j_1_reg_1998)
    begin
        if (((exitcond_flatten_reg_1355 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            j_phi_fu_702_p4 <= j_1_reg_1998;
        else 
            j_phi_fu_702_p4 <= j_reg_698;
        end if; 
    end process;

    tmp10_fu_1257_p2 <= std_logic_vector(unsigned(tmp12_reg_2063) + unsigned(tmp11_reg_2048));
    tmp13_fu_1271_p2 <= std_logic_vector(unsigned(tmp15_fu_1267_p2) + unsigned(tmp14_fu_1261_p2));
    tmp14_fu_1261_p2 <= std_logic_vector(unsigned(reg_874) + unsigned(reg_890));
    tmp15_fu_1267_p2 <= std_logic_vector(unsigned(tmp_6_13_reg_2083) + unsigned(tmp_6_14_reg_2098));
    tmp16_fu_1314_p2 <= std_logic_vector(unsigned(tmp24_fu_1308_p2) + unsigned(tmp17_fu_1283_p2));
    tmp17_fu_1283_p2 <= std_logic_vector(unsigned(grp_fu_940_p2) + unsigned(tmp18_reg_2068));
    tmp1_fu_1345_p2 <= std_logic_vector(unsigned(tmp9_reg_2113) + unsigned(tmp2_reg_2108));
    tmp24_fu_1308_p2 <= std_logic_vector(unsigned(tmp28_fu_1302_p2) + unsigned(tmp25_fu_1288_p2));
    tmp25_fu_1288_p2 <= std_logic_vector(unsigned(tmp27_reg_2073) + unsigned(tmp26_reg_2053));
    tmp28_fu_1302_p2 <= std_logic_vector(unsigned(tmp30_fu_1298_p2) + unsigned(tmp29_fu_1292_p2));
    tmp29_fu_1292_p2 <= std_logic_vector(unsigned(reg_882) + unsigned(reg_898));
    tmp2_fu_1251_p2 <= std_logic_vector(unsigned(tmp6_fu_1245_p2) + unsigned(tmp3_fu_1231_p2));
    tmp30_fu_1298_p2 <= std_logic_vector(unsigned(tmp_6_29_reg_2088) + unsigned(tmp_6_30_reg_2103));
    tmp3_fu_1231_p2 <= std_logic_vector(unsigned(tmp5_reg_2058) + unsigned(tmp4_reg_2043));
    tmp6_fu_1245_p2 <= std_logic_vector(unsigned(tmp8_fu_1241_p2) + unsigned(tmp7_fu_1235_p2));
    tmp7_fu_1235_p2 <= std_logic_vector(unsigned(reg_870) + unsigned(reg_886));
    tmp8_fu_1241_p2 <= std_logic_vector(unsigned(tmp_6_6_reg_2078) + unsigned(tmp_6_7_reg_2093));
    tmp9_fu_1277_p2 <= std_logic_vector(unsigned(tmp13_fu_1271_p2) + unsigned(tmp10_fu_1257_p2));
    tmp_10_fu_1106_p2 <= (tmp_reg_1382 or ap_const_lv9_4);
    tmp_11_fu_1111_p3 <= (ap_const_lv55_0 & tmp_10_fu_1106_p2);
    tmp_12_fu_1134_p2 <= (tmp_reg_1382 or ap_const_lv9_5);
    tmp_13_fu_1139_p3 <= (ap_const_lv55_0 & tmp_12_fu_1134_p2);
    tmp_14_fu_1164_p2 <= (tmp_reg_1382 or ap_const_lv9_6);
    tmp_15_fu_1169_p3 <= (ap_const_lv55_0 & tmp_14_fu_1164_p2);
    tmp_16_fu_1192_p2 <= (tmp_reg_1382 or ap_const_lv9_7);
    tmp_17_fu_1197_p3 <= (ap_const_lv55_0 & tmp_16_fu_1192_p2);
    tmp_18_fu_1320_p3 <= (ap_pipeline_reg_pp0_iter1_tmp_mid2_v_reg_1376 & ap_const_lv5_0);
    tmp_19_fu_1030_p2 <= std_logic_vector(unsigned(tmp_2_cast_fu_1027_p1) + unsigned(ap_const_lv7_20));
    tmp_20_cast_fu_1327_p1 <= std_logic_vector(resize(unsigned(tmp_18_fu_1320_p3),12));
    tmp_20_fu_1061_p3 <= (ap_const_lv58_1 & j_mid2_reg_1364);
    tmp_21_cast_fu_1036_p1 <= std_logic_vector(resize(unsigned(tmp_19_fu_1030_p2),64));
    tmp_21_fu_1092_p2 <= std_logic_vector(unsigned(tmp_2_cast3_fu_1089_p1) + unsigned(ap_const_lv8_60));
    tmp_22_fu_1123_p3 <= (ap_const_lv58_2 & j_mid2_reg_1364);
    tmp_23_cast_fu_1098_p1 <= std_logic_vector(resize(unsigned(tmp_21_fu_1092_p2),64));
    tmp_23_fu_1151_p2 <= std_logic_vector(unsigned(tmp_2_cast3_reg_1613) + unsigned(ap_const_lv8_A0));
    tmp_24_fu_1181_p3 <= (ap_const_lv58_3 & j_mid2_reg_1364);
    tmp_25_cast_fu_1156_p1 <= std_logic_vector(resize(unsigned(tmp_23_fu_1151_p2),64));
    tmp_25_fu_1212_p2 <= std_logic_vector(unsigned(tmp_2_cast4_fu_1209_p1) + unsigned(ap_const_lv9_E0));
    tmp_26_fu_1334_p2 <= std_logic_vector(unsigned(tmp_2_cast5_fu_1331_p1) + unsigned(tmp_20_cast_fu_1327_p1));
    tmp_27_cast_fu_1218_p1 <= std_logic_vector(resize(unsigned(tmp_25_fu_1212_p2),64));
    tmp_28_cast_fu_1340_p1 <= std_logic_vector(resize(unsigned(tmp_26_fu_1334_p2),64));
    tmp_2_cast3_fu_1089_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1364),8));
    tmp_2_cast4_fu_1209_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1364),9));
    tmp_2_cast5_fu_1331_p1 <= std_logic_vector(resize(unsigned(ap_pipeline_reg_pp0_iter1_j_mid2_reg_1364),12));
    tmp_2_cast_fu_1027_p1 <= std_logic_vector(resize(unsigned(j_mid2_reg_1364),7));
    tmp_2_fu_1002_p1 <= std_logic_vector(resize(unsigned(j_mid2_fu_970_p3),64));
    tmp_3_fu_994_p1 <= std_logic_vector(resize(unsigned(tmp_fu_986_p3),64));
    tmp_4_fu_1010_p2 <= (tmp_reg_1382 or ap_const_lv9_1);
    tmp_5_fu_1015_p3 <= (ap_const_lv55_0 & tmp_4_fu_1010_p2);
    tmp_7_fu_1044_p2 <= (tmp_reg_1382 or ap_const_lv9_2);
    tmp_8_fu_1049_p3 <= (ap_const_lv55_0 & tmp_7_fu_1044_p2);
    tmp_9_fu_1072_p2 <= (tmp_reg_1382 or ap_const_lv9_3);
    tmp_fu_986_p3 <= (tmp_mid2_v_fu_978_p3 & ap_const_lv3_0);
    tmp_mid2_v_fu_978_p3 <= 
        i_1_fu_958_p2 when (exitcond_fu_964_p2(0) = '1') else 
        i_phi_fu_691_p4;
    tmp_s_fu_1077_p3 <= (ap_const_lv55_0 & tmp_9_fu_1072_p2);
end behav;
