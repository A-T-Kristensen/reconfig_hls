-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fir2dim_hwa is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fir2dim_input_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_input_EN_A : OUT STD_LOGIC;
    fir2dim_input_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    fir2dim_input_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_input_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_input_Clk_A : OUT STD_LOGIC;
    fir2dim_input_Rst_A : OUT STD_LOGIC;
    fir2dim_output_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_output_EN_A : OUT STD_LOGIC;
    fir2dim_output_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    fir2dim_output_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_output_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    fir2dim_output_Clk_A : OUT STD_LOGIC;
    fir2dim_output_Rst_A : OUT STD_LOGIC );
end;


architecture behav of fir2dim_hwa is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fir2dim_hwa,hls_ip_2016_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.436600,HLS_SYN_LAT=137,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=2114,HLS_SYN_LUT=1673}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (28 downto 0) := "00000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (28 downto 0) := "00000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (28 downto 0) := "00000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (28 downto 0) := "00000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (28 downto 0) := "00000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (28 downto 0) := "00001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (28 downto 0) := "00010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (28 downto 0) := "00100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (28 downto 0) := "01000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal k_reg_364 : STD_LOGIC_VECTOR (2 downto 0);
    signal poutput_0_idx_reg_376 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_409 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond1_reg_867 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal reg_417 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal reg_423 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal reg_429 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal grp_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_437 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal reg_443 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_455 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal reg_461 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal reg_467 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_473 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_403_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_478 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_388_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_483 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_pipeline_reg_pp0_iter1_exitcond1_reg_867 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_493 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_498 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_504 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal reg_510 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_516 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_393_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_523 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_529 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_1_fu_546_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_reg_871 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_578_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_876 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_0_1_fu_595_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_0_1_reg_899 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_0_2_fu_605_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_0_2_reg_909 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_1_2_fu_615_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_1_2_reg_919 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_3_2_reg_954 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_2_reg_969 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_0_1_reg_979 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_2_1_reg_989 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_0_2_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_1_2_reg_1004 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_2_2_reg_1014 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1024 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_1_reg_1029 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_2_reg_1039 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_3_reg_1044 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_0_1_reg_1054 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_1_1_reg_1059 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_2_1_reg_1069 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_3_1_reg_1074 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_0_2_reg_1079 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_1_2_reg_1084 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_2_2_reg_1089 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_3_2_reg_1094 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_3_reg_1099 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_777_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_reg_1104 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_786_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_reg_1111 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal k_phi_fu_368_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_590_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_0_1_cast_fu_600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_0_2_cast_fu_610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_1_2_cast_fu_620_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_2_2_cast_fu_630_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_3_2_cast_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum4_cast_fu_650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum4_0_1_cast_fu_660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum4_0_2_cast_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum4_1_2_cast_fu_680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum4_2_2_cast_fu_690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum4_3_2_cast_fu_700_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum8_cast_fu_710_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum8_0_1_cast_fu_720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum8_0_2_cast_fu_730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum8_1_2_cast_fu_744_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum8_2_2_cast_fu_758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum8_3_2_cast_fu_772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal poutput_0_idx_cast_fu_781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal poutput_0_idx1_cast_fu_797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal poutput_0_idx1_1_cas_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal poutput_0_idx1_2_cas_fu_817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal fir2dim_input_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal fir2dim_output_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_388_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_393_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_393_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_397_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_397_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_403_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_403_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_552_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl_fu_556_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_fu_568_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl_cast_fu_564_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl1_cast_fu_574_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_584_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_2_2_fu_625_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum_3_2_fu_635_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum4_fu_645_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum4_0_1_fu_655_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum4_0_2_fu_665_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum4_1_2_fu_675_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum4_2_2_fu_685_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum4_3_2_fu_695_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum8_fu_705_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum8_0_1_fu_715_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sum8_0_2_fu_725_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_4_1_cast3_fu_735_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum8_1_2_fu_738_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_2_cast2_fu_749_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum8_2_2_fu_752_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_3_cast1_fu_763_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum8_3_2_fu_766_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal poutput_0_idx1_s_fu_792_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal poutput_0_idx1_1_fu_802_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal poutput_0_idx1_2_fu_812_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (28 downto 0);

    component fir2dim_hwa_fadd_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fir2dim_hwa_fmul_cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    fir2dim_hwa_fadd_bkb_U1 : component fir2dim_hwa_fadd_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_388_p0,
        din1 => grp_fu_388_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_388_p2);

    fir2dim_hwa_fadd_bkb_U2 : component fir2dim_hwa_fadd_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_393_p0,
        din1 => grp_fu_393_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_393_p2);

    fir2dim_hwa_fmul_cud_U3 : component fir2dim_hwa_fmul_cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_397_p0,
        din1 => grp_fu_397_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_397_p2);

    fir2dim_hwa_fmul_cud_U4 : component fir2dim_hwa_fmul_cud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_403_p0,
        din1 => grp_fu_403_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_403_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and not((ap_const_lv1_0 = exitcond1_fu_540_p2)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0))) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26) and not((exitcond1_reg_867 = ap_const_lv1_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    k_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
                k_reg_364 <= k_1_reg_871;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                k_reg_364 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    poutput_0_idx_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
                poutput_0_idx_reg_376 <= tmp_2_reg_1111;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_start = ap_const_logic_0)))) then 
                poutput_0_idx_reg_376 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                ap_pipeline_reg_pp0_iter1_exitcond1_reg_867 <= exitcond1_reg_867;
                exitcond1_reg_867 <= exitcond1_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                k_1_reg_871 <= k_1_fu_546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)))) then
                reg_409 <= fir2dim_input_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)))) then
                reg_417 <= fir2dim_input_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)))) then
                reg_423 <= fir2dim_input_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)))) then
                reg_429 <= fir2dim_input_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)))) then
                reg_437 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)))) then
                reg_443 <= fir2dim_input_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_449 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_455 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)))) then
                reg_461 <= fir2dim_input_Dout_A;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)))) then
                reg_467 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)))) then
                reg_473 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)))) then
                reg_478 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)))) then
                reg_483 <= grp_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)))) then
                reg_488 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)))) then
                reg_493 <= grp_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)))) then
                reg_498 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)))) then
                reg_504 <= grp_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)))) then
                reg_510 <= grp_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)))) then
                reg_516 <= grp_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage20) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage25) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)))) then
                reg_523 <= grp_fu_393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)))) then
                reg_529 <= grp_fu_393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)))) then
                reg_534 <= grp_fu_393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2))) then
                    sum_0_1_reg_899(5 downto 1) <= sum_0_1_fu_595_p2(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3))) then
                    sum_0_2_reg_909(5 downto 1) <= sum_0_2_fu_605_p2(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4))) then
                    sum_1_2_reg_919(5 downto 1) <= sum_1_2_fu_615_p2(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_10_0_1_reg_1054 <= grp_fu_397_p2;
                tmp_10_1_1_reg_1059 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867))) then
                tmp_10_0_2_reg_1079 <= grp_fu_397_p2;
                tmp_10_1_2_reg_1084 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24))) then
                tmp_10_1_reg_1029 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867))) then
                tmp_10_2_1_reg_1069 <= grp_fu_397_p2;
                tmp_10_3_1_reg_1074 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867))) then
                tmp_10_2_2_reg_1089 <= grp_fu_397_p2;
                tmp_10_3_2_reg_1094 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25))) then
                tmp_10_2_reg_1039 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26))) then
                tmp_10_3_reg_1044 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867))) then
                tmp_10_reg_1104 <= tmp_10_fu_777_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867))) then
                tmp_1_2_3_reg_1099 <= grp_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867))) then
                tmp_2_reg_1111 <= tmp_2_fu_786_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23))) then
                tmp_5_reg_1024 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12))) then
                tmp_6_3_2_reg_954 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18))) then
                tmp_9_0_1_reg_979 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20))) then
                tmp_9_0_2_reg_994 <= grp_fu_397_p2;
                tmp_9_1_2_reg_1004 <= grp_fu_403_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19))) then
                tmp_9_2_1_reg_989 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21))) then
                tmp_9_2_2_reg_1014 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16))) then
                tmp_9_2_reg_969 <= grp_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (exitcond1_reg_867 = ap_const_lv1_0))) then
                    tmp_reg_876(5 downto 1) <= tmp_fu_578_p2(5 downto 1);
            end if;
        end if;
    end process;
    tmp_reg_876(0) <= '0';
    sum_0_1_reg_899(0) <= '0';
    sum_0_2_reg_909(0) <= '1';
    sum_1_2_reg_919(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, exitcond1_fu_540_p2, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond1_fu_540_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not((ap_const_lv1_0 = exitcond1_fu_540_p2)) and not((ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
            when ap_ST_fsm_pp0_stage2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
            when ap_ST_fsm_pp0_stage3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
            when ap_ST_fsm_pp0_stage4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
            when ap_ST_fsm_pp0_stage5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
            when ap_ST_fsm_pp0_stage6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
            when ap_ST_fsm_pp0_stage7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
            when ap_ST_fsm_pp0_stage8 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
            when ap_ST_fsm_pp0_stage9 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
            when ap_ST_fsm_pp0_stage10 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
            when ap_ST_fsm_pp0_stage11 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
            when ap_ST_fsm_pp0_stage12 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
            when ap_ST_fsm_pp0_stage13 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
            when ap_ST_fsm_pp0_stage14 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
            when ap_ST_fsm_pp0_stage15 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
            when ap_ST_fsm_pp0_stage16 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
            when ap_ST_fsm_pp0_stage17 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
            when ap_ST_fsm_pp0_stage18 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
            when ap_ST_fsm_pp0_stage19 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
            when ap_ST_fsm_pp0_stage20 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
            when ap_ST_fsm_pp0_stage21 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
            when ap_ST_fsm_pp0_stage22 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
            when ap_ST_fsm_pp0_stage23 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
            when ap_ST_fsm_pp0_stage24 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
            when ap_ST_fsm_pp0_stage25 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
            when ap_ST_fsm_pp0_stage26 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2 downto 2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11 downto 11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12 downto 12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13 downto 13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14 downto 14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15 downto 15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16 downto 16);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(17 downto 17);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(18 downto 18);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(19 downto 19);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(20 downto 20);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3 downto 3);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(21 downto 21);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(22 downto 22);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(23 downto 23);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(24 downto 24);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(25 downto 25);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(26 downto 26);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(27 downto 27);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4 downto 4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8 downto 8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9 downto 9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10 downto 10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state57 <= ap_CS_fsm(28 downto 28);

    ap_done_assign_proc : process(ap_CS_fsm_state57)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state57)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state57))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_540_p2 <= "1" when (k_phi_fu_368_p4 = ap_const_lv3_4) else "0";
    fir2dim_input_Addr_A <= std_logic_vector(shift_left(unsigned(fir2dim_input_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    fir2dim_input_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage0, tmp_4_fu_590_p1, sum_0_1_cast_fu_600_p1, sum_0_2_cast_fu_610_p1, sum_1_2_cast_fu_620_p1, sum_2_2_cast_fu_630_p1, sum_3_2_cast_fu_640_p1, sum4_cast_fu_650_p1, sum4_0_1_cast_fu_660_p1, sum4_0_2_cast_fu_670_p1, sum4_1_2_cast_fu_680_p1, sum4_2_2_cast_fu_690_p1, sum4_3_2_cast_fu_700_p1, sum8_cast_fu_710_p1, sum8_0_1_cast_fu_720_p1, sum8_0_2_cast_fu_730_p1, sum8_1_2_cast_fu_744_p1, sum8_2_2_cast_fu_758_p1, sum8_3_2_cast_fu_772_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) then 
                fir2dim_input_Addr_A_orig <= sum8_3_2_cast_fu_772_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)) then 
                fir2dim_input_Addr_A_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)) then 
                fir2dim_input_Addr_A_orig <= sum8_2_2_cast_fu_758_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) then 
                fir2dim_input_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) then 
                fir2dim_input_Addr_A_orig <= sum8_1_2_cast_fu_744_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) then 
                fir2dim_input_Addr_A_orig <= sum8_0_2_cast_fu_730_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) then 
                fir2dim_input_Addr_A_orig <= sum8_0_1_cast_fu_720_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) then 
                fir2dim_input_Addr_A_orig <= sum8_cast_fu_710_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) then 
                fir2dim_input_Addr_A_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) then 
                fir2dim_input_Addr_A_orig <= sum4_3_2_cast_fu_700_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) then 
                fir2dim_input_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) then 
                fir2dim_input_Addr_A_orig <= sum4_2_2_cast_fu_690_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                fir2dim_input_Addr_A_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) then 
                fir2dim_input_Addr_A_orig <= sum4_1_2_cast_fu_680_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                fir2dim_input_Addr_A_orig <= sum4_0_2_cast_fu_670_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                fir2dim_input_Addr_A_orig <= sum4_0_1_cast_fu_660_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) then 
                fir2dim_input_Addr_A_orig <= sum4_cast_fu_650_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                fir2dim_input_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) then 
                fir2dim_input_Addr_A_orig <= sum_3_2_cast_fu_640_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                fir2dim_input_Addr_A_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                fir2dim_input_Addr_A_orig <= sum_2_2_cast_fu_630_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) then 
                fir2dim_input_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) then 
                fir2dim_input_Addr_A_orig <= sum_1_2_cast_fu_620_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) then 
                fir2dim_input_Addr_A_orig <= sum_0_2_cast_fu_610_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) then 
                fir2dim_input_Addr_A_orig <= sum_0_1_cast_fu_600_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1)) then 
                fir2dim_input_Addr_A_orig <= tmp_4_fu_590_p1(32 - 1 downto 0);
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) then 
                fir2dim_input_Addr_A_orig <= ap_const_lv64_0(32 - 1 downto 0);
            else 
                fir2dim_input_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            fir2dim_input_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    fir2dim_input_Clk_A <= ap_clk;
    fir2dim_input_Din_A <= ap_const_lv32_0;

    fir2dim_input_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            fir2dim_input_EN_A <= ap_const_logic_1;
        else 
            fir2dim_input_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    fir2dim_input_Rst_A <= ap_rst;
    fir2dim_input_WEN_A <= ap_const_lv4_0;
    fir2dim_output_Addr_A <= std_logic_vector(shift_left(unsigned(fir2dim_output_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    fir2dim_output_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, poutput_0_idx_cast_fu_781_p1, poutput_0_idx1_cast_fu_797_p1, poutput_0_idx1_1_cas_fu_807_p1, poutput_0_idx1_2_cas_fu_817_p1)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            fir2dim_output_Addr_A_orig <= poutput_0_idx1_2_cas_fu_817_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            fir2dim_output_Addr_A_orig <= poutput_0_idx1_1_cas_fu_807_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage25) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            fir2dim_output_Addr_A_orig <= poutput_0_idx1_cast_fu_797_p1(32 - 1 downto 0);
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            fir2dim_output_Addr_A_orig <= poutput_0_idx_cast_fu_781_p1(32 - 1 downto 0);
        else 
            fir2dim_output_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    fir2dim_output_Clk_A <= ap_clk;

    fir2dim_output_Din_A_assign_proc : process(ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, reg_516, reg_523, reg_534, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            fir2dim_output_Din_A <= reg_523;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage25) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            fir2dim_output_Din_A <= reg_516;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            fir2dim_output_Din_A <= reg_534;
        else 
            fir2dim_output_Din_A <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fir2dim_output_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage25) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            fir2dim_output_EN_A <= ap_const_logic_1;
        else 
            fir2dim_output_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    fir2dim_output_Rst_A <= ap_rst;

    fir2dim_output_WEN_A_assign_proc : process(ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_enable_reg_pp0_iter1, ap_pipeline_reg_pp0_iter1_exitcond1_reg_867, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage24) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage25) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage26) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867)) or ((ap_const_lv1_0 = ap_pipeline_reg_pp0_iter1_exitcond1_reg_867) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2)))) then 
            fir2dim_output_WEN_A <= ap_const_lv4_F;
        else 
            fir2dim_output_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;


    grp_fu_388_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage26, reg_437, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage24, reg_449, reg_455, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage16, reg_467, reg_483, ap_enable_reg_pp0_iter1, reg_493, reg_504, ap_CS_fsm_pp0_stage0, reg_510, reg_516, tmp_1_2_3_reg_1099)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage20) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_388_p0 <= reg_516;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_388_p0 <= tmp_1_2_3_reg_1099;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_388_p0 <= reg_510;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_388_p0 <= reg_504;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_388_p0 <= reg_493;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_388_p0 <= reg_483;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_388_p0 <= reg_467;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_388_p0 <= reg_455;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_388_p0 <= reg_449;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_388_p0 <= reg_437;
        else 
            grp_fu_388_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_388_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage26, reg_437, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage24, reg_449, reg_455, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage16, reg_467, reg_473, reg_478, ap_enable_reg_pp0_iter1, reg_488, reg_498, ap_CS_fsm_pp0_stage0, tmp_6_3_2_reg_954, tmp_9_2_reg_969, tmp_9_0_1_reg_979, tmp_9_2_1_reg_989, tmp_9_0_2_reg_994, tmp_9_1_2_reg_1004, tmp_10_1_reg_1029, tmp_10_1_1_reg_1059, tmp_10_1_2_reg_1084)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage20) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_388_p1 <= tmp_10_1_2_reg_1084;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage15) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_388_p1 <= tmp_10_1_1_reg_1059;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage10) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_388_p1 <= tmp_10_1_reg_1029;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_388_p1 <= tmp_9_1_2_reg_1004;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_388_p1 <= tmp_9_0_2_reg_994;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_388_p1 <= tmp_9_2_1_reg_989;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26))) then 
            grp_fu_388_p1 <= tmp_9_0_1_reg_979;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23))) then 
            grp_fu_388_p1 <= tmp_9_2_reg_969;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21))) then 
            grp_fu_388_p1 <= reg_467;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage19))) then 
            grp_fu_388_p1 <= tmp_6_3_2_reg_954;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18))) then 
            grp_fu_388_p1 <= reg_455;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17))) then 
            grp_fu_388_p1 <= reg_498;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16))) then 
            grp_fu_388_p1 <= reg_449;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_388_p1 <= reg_488;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)))) then 
            grp_fu_388_p1 <= reg_437;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_388_p1 <= reg_478;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)))) then 
            grp_fu_388_p1 <= reg_473;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_388_p1 <= ap_const_lv32_0;
        else 
            grp_fu_388_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_393_p0_assign_proc : process(ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage16, ap_enable_reg_pp0_iter1, reg_504, reg_510, reg_516, reg_523, reg_529, reg_534)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_393_p0 <= reg_534;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_393_p0 <= reg_529;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)))) then 
            grp_fu_393_p0 <= reg_523;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_393_p0 <= reg_516;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_393_p0 <= reg_510;
        elsif (((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            grp_fu_393_p0 <= reg_504;
        else 
            grp_fu_393_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_393_p1_assign_proc : process(ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage16, ap_enable_reg_pp0_iter1, reg_498, tmp_9_2_2_reg_1014, tmp_5_reg_1024, tmp_10_2_reg_1039, tmp_10_3_reg_1044, tmp_10_0_1_reg_1054, tmp_10_2_1_reg_1069, tmp_10_3_1_reg_1074, tmp_10_0_2_reg_1079, tmp_10_2_2_reg_1089, tmp_10_3_2_reg_1094)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter1)) then
            if ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) then 
                grp_fu_393_p1 <= tmp_10_3_2_reg_1094;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) then 
                grp_fu_393_p1 <= tmp_10_2_2_reg_1089;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage19)) then 
                grp_fu_393_p1 <= tmp_10_0_2_reg_1079;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) then 
                grp_fu_393_p1 <= tmp_10_3_1_reg_1074;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) then 
                grp_fu_393_p1 <= tmp_10_2_1_reg_1069;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) then 
                grp_fu_393_p1 <= tmp_10_0_1_reg_1054;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) then 
                grp_fu_393_p1 <= tmp_10_3_reg_1044;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) then 
                grp_fu_393_p1 <= tmp_10_2_reg_1039;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) then 
                grp_fu_393_p1 <= tmp_5_reg_1024;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) then 
                grp_fu_393_p1 <= reg_498;
            elsif ((ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) then 
                grp_fu_393_p1 <= tmp_9_2_2_reg_1014;
            else 
                grp_fu_393_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_393_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_397_p0_assign_proc : process(fir2dim_input_Dout_A, reg_409, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage22, reg_429, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage17, reg_443, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage25, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_397_p0 <= reg_429;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)))) then 
            grp_fu_397_p0 <= reg_443;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)))) then 
            grp_fu_397_p0 <= fir2dim_input_Dout_A;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_397_p0 <= reg_409;
        else 
            grp_fu_397_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_397_p1_assign_proc : process(fir2dim_input_Dout_A, reg_409, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage21, reg_417, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage23, reg_423, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage22, reg_429, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage7, reg_461, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage25, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)))) then 
            grp_fu_397_p1 <= reg_409;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_397_p1 <= reg_461;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_397_p1 <= reg_429;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)))) then 
            grp_fu_397_p1 <= reg_417;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_397_p1 <= reg_423;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage12)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage21)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage14)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage20)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage23)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage13)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage22)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_397_p1 <= fir2dim_input_Dout_A;
        else 
            grp_fu_397_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_403_p0_assign_proc : process(fir2dim_input_Dout_A, reg_409, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage9, reg_429, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage17, reg_443, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage25, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_403_p0 <= reg_429;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_403_p0 <= reg_409;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)))) then 
            grp_fu_403_p0 <= reg_443;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)))) then 
            grp_fu_403_p0 <= fir2dim_input_Dout_A;
        else 
            grp_fu_403_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_403_p1_assign_proc : process(fir2dim_input_Dout_A, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage18, reg_417, reg_423, ap_CS_fsm_pp0_stage9, reg_429, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage25, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage15)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage24)))) then 
            grp_fu_403_p1 <= reg_423;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage26)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage17)))) then 
            grp_fu_403_p1 <= reg_417;
        elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage18)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage16)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage25)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_403_p1 <= fir2dim_input_Dout_A;
        elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_403_p1 <= reg_429;
        else 
            grp_fu_403_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    k_1_fu_546_p2 <= std_logic_vector(unsigned(k_phi_fu_368_p4) + unsigned(ap_const_lv3_1));

    k_phi_fu_368_p4_assign_proc : process(k_reg_364, exitcond1_reg_867, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, k_1_reg_871)
    begin
        if (((exitcond1_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_CS_fsm_pp0_stage0))) then 
            k_phi_fu_368_p4 <= k_1_reg_871;
        else 
            k_phi_fu_368_p4 <= k_reg_364;
        end if; 
    end process;

    p_shl1_cast_fu_574_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_568_p2),6));
    p_shl_cast_fu_564_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_556_p3),6));
    p_shl_fu_556_p3 <= (tmp_11_fu_552_p1 & ap_const_lv3_0);
    poutput_0_idx1_1_cas_fu_807_p1 <= std_logic_vector(resize(unsigned(poutput_0_idx1_1_fu_802_p2),64));
    poutput_0_idx1_1_fu_802_p2 <= (tmp_10_reg_1104 or ap_const_lv4_2);
    poutput_0_idx1_2_cas_fu_817_p1 <= std_logic_vector(resize(unsigned(poutput_0_idx1_2_fu_812_p2),64));
    poutput_0_idx1_2_fu_812_p2 <= (tmp_10_reg_1104 or ap_const_lv4_3);
    poutput_0_idx1_cast_fu_797_p1 <= std_logic_vector(resize(unsigned(poutput_0_idx1_s_fu_792_p2),64));
    poutput_0_idx1_s_fu_792_p2 <= (tmp_10_reg_1104 or ap_const_lv4_1);
    poutput_0_idx_cast_fu_781_p1 <= std_logic_vector(resize(unsigned(poutput_0_idx_reg_376),64));
    sum4_0_1_cast_fu_660_p1 <= std_logic_vector(resize(unsigned(sum4_0_1_fu_655_p2),64));
    sum4_0_1_fu_655_p2 <= (tmp_reg_876 xor ap_const_lv6_20);
    sum4_0_2_cast_fu_670_p1 <= std_logic_vector(resize(unsigned(sum4_0_2_fu_665_p2),64));
    sum4_0_2_fu_665_p2 <= std_logic_vector(signed(ap_const_lv6_21) + signed(tmp_reg_876));
    sum4_1_2_cast_fu_680_p1 <= std_logic_vector(resize(unsigned(sum4_1_2_fu_675_p2),64));
    sum4_1_2_fu_675_p2 <= std_logic_vector(signed(ap_const_lv6_22) + signed(tmp_reg_876));
    sum4_2_2_cast_fu_690_p1 <= std_logic_vector(resize(unsigned(sum4_2_2_fu_685_p2),64));
    sum4_2_2_fu_685_p2 <= std_logic_vector(signed(ap_const_lv6_23) + signed(tmp_reg_876));
    sum4_3_2_cast_fu_700_p1 <= std_logic_vector(resize(unsigned(sum4_3_2_fu_695_p2),64));
    sum4_3_2_fu_695_p2 <= std_logic_vector(signed(ap_const_lv6_24) + signed(tmp_reg_876));
    sum4_cast_fu_650_p1 <= std_logic_vector(resize(unsigned(sum4_fu_645_p2),64));
    sum4_fu_645_p2 <= std_logic_vector(unsigned(ap_const_lv6_1F) + unsigned(tmp_reg_876));
    sum8_0_1_cast_fu_720_p1 <= std_logic_vector(resize(unsigned(sum8_0_1_fu_715_p2),64));
    sum8_0_1_fu_715_p2 <= std_logic_vector(signed(ap_const_lv6_26) + signed(tmp_reg_876));
    sum8_0_2_cast_fu_730_p1 <= std_logic_vector(resize(unsigned(sum8_0_2_fu_725_p2),64));
    sum8_0_2_fu_725_p2 <= std_logic_vector(signed(ap_const_lv6_27) + signed(tmp_reg_876));
        sum8_1_2_cast_fu_744_p1 <= std_logic_vector(resize(signed(sum8_1_2_fu_738_p2),64));

    sum8_1_2_fu_738_p2 <= std_logic_vector(unsigned(ap_const_lv7_E) + unsigned(tmp_4_1_cast3_fu_735_p1));
        sum8_2_2_cast_fu_758_p1 <= std_logic_vector(resize(signed(sum8_2_2_fu_752_p2),64));

    sum8_2_2_fu_752_p2 <= std_logic_vector(unsigned(ap_const_lv7_E) + unsigned(tmp_4_2_cast2_fu_749_p1));
        sum8_3_2_cast_fu_772_p1 <= std_logic_vector(resize(signed(sum8_3_2_fu_766_p2),64));

    sum8_3_2_fu_766_p2 <= std_logic_vector(unsigned(ap_const_lv7_E) + unsigned(tmp_4_3_cast1_fu_763_p1));
    sum8_cast_fu_710_p1 <= std_logic_vector(resize(unsigned(sum8_fu_705_p2),64));
    sum8_fu_705_p2 <= std_logic_vector(signed(ap_const_lv6_25) + signed(tmp_reg_876));
    sum_0_1_cast_fu_600_p1 <= std_logic_vector(resize(unsigned(sum_0_1_fu_595_p2),64));
    sum_0_1_fu_595_p2 <= std_logic_vector(unsigned(ap_const_lv6_1A) + unsigned(tmp_reg_876));
    sum_0_2_cast_fu_610_p1 <= std_logic_vector(resize(unsigned(sum_0_2_fu_605_p2),64));
    sum_0_2_fu_605_p2 <= std_logic_vector(unsigned(ap_const_lv6_1B) + unsigned(tmp_reg_876));
    sum_1_2_cast_fu_620_p1 <= std_logic_vector(resize(unsigned(sum_1_2_fu_615_p2),64));
    sum_1_2_fu_615_p2 <= std_logic_vector(unsigned(ap_const_lv6_1C) + unsigned(tmp_reg_876));
    sum_2_2_cast_fu_630_p1 <= std_logic_vector(resize(unsigned(sum_2_2_fu_625_p2),64));
    sum_2_2_fu_625_p2 <= std_logic_vector(unsigned(ap_const_lv6_1D) + unsigned(tmp_reg_876));
    sum_3_2_cast_fu_640_p1 <= std_logic_vector(resize(unsigned(sum_3_2_fu_635_p2),64));
    sum_3_2_fu_635_p2 <= std_logic_vector(unsigned(ap_const_lv6_1E) + unsigned(tmp_reg_876));
    tmp_10_fu_777_p1 <= poutput_0_idx_reg_376(4 - 1 downto 0);
    tmp_11_fu_552_p1 <= k_reg_364(2 - 1 downto 0);
    tmp_12_fu_568_p2 <= std_logic_vector(shift_left(unsigned(k_reg_364),to_integer(unsigned('0' & ap_const_lv3_1(3-1 downto 0)))));
    tmp_2_fu_786_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(poutput_0_idx_reg_376));
    tmp_3_fu_584_p2 <= std_logic_vector(unsigned(ap_const_lv6_19) + unsigned(tmp_fu_578_p2));
    tmp_4_1_cast3_fu_735_p1 <= std_logic_vector(resize(unsigned(sum_0_1_reg_899),7));
    tmp_4_2_cast2_fu_749_p1 <= std_logic_vector(resize(unsigned(sum_0_2_reg_909),7));
    tmp_4_3_cast1_fu_763_p1 <= std_logic_vector(resize(unsigned(sum_1_2_reg_919),7));
    tmp_4_fu_590_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_584_p2),64));
    tmp_fu_578_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_564_p1) - unsigned(p_shl1_cast_fu_574_p1));
end behav;
