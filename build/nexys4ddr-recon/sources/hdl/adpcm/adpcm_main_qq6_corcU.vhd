-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity adpcm_main_qq6_corcU_rom is 
    generic(
             dwidth     : integer := 16; 
             awidth     : integer := 6; 
             mem_size    : integer := 64
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of adpcm_main_qq6_corcU_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 to 3=> "1111111101111000", 4 => "1001111100011000", 5 => "1010101001110000", 
    6 => "1011010111000000", 7 => "1011111011000000", 8 => "1100010101111000", 
    9 => "1100101100111000", 10 => "1101000000001000", 11 => "1101010001001000", 
    12 => "1101100000001000", 13 => "1101101101110000", 14 => "1101111010000000", 
    15 => "1110000101010000", 16 => "1110001111101000", 17 => "1110011001010000", 
    18 => "1110100010010000", 19 => "1110101010110000", 20 => "1110110010110000", 
    21 => "1110111010010000", 22 => "1111000001011000", 23 => "1111001000001000", 
    24 => "1111001110100000", 25 => "1111010100101000", 26 => "1111011010100000", 
    27 => "1111100000010000", 28 => "1111100101101000", 29 => "1111101010110000", 
    30 => "1111101111110000", 31 => "1111110100101000", 32 => "0110000011101000", 
    33 => "0101010110010000", 34 => "0100101001000000", 35 => "0100000101000000", 
    36 => "0011101010001000", 37 => "0011010011001000", 38 => "0010111111111000", 
    39 => "0010101110111000", 40 => "0010011111111000", 41 => "0010010010010000", 
    42 => "0010000110000000", 43 => "0001111010110000", 44 => "0001110000011000", 
    45 => "0001100110110000", 46 => "0001011101110000", 47 => "0001010101010000", 
    48 => "0001001101010000", 49 => "0001000101110000", 50 => "0000111110101000", 
    51 => "0000110111111000", 52 => "0000110001100000", 53 => "0000101011011000", 
    54 => "0000100101100000", 55 => "0000011111110000", 56 => "0000011010011000", 
    57 => "0000010101010000", 58 => "0000010000010000", 59 => "0000001011011000", 
    60 => "0000000110110000", 61 => "0000000010001000", 62 => "1111111001010000", 
    63 => "1111111101111000" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity adpcm_main_qq6_corcU is
    generic (
        DataWidth : INTEGER := 16;
        AddressRange : INTEGER := 64;
        AddressWidth : INTEGER := 6);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of adpcm_main_qq6_corcU is
    component adpcm_main_qq6_corcU_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    adpcm_main_qq6_corcU_rom_U :  component adpcm_main_qq6_corcU_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


